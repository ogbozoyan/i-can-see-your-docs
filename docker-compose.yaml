version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: core-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: coredb
    ports:
      - "54324:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d coredb"]
      interval: 5s
      timeout: 3s
      retries: 10

  minio:
    image: minio/minio:latest
    container_name: minio
    restart: unless-stopped
    environment:
      TZ: Europe/Moscow
      LANG: en_US.UTF-8
      MINIO_PROMETHEUS_AUTH_TYPE: "public"
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
    ports:
      - "9000:9000"
      - "9001:9001"

  database:
    image: pgvector/pgvector:pg17
    container_name: pgvector-ocr-uni
    restart: always
    environment:
      - POSTGRES_DB=ocr
      - POSTGRES_PASSWORD=admin
      - POSTGRES_USER=admin
    labels:
      - "org.springframework.boot.service-connection=postgres"
    ports:
      - "5432:5432"
    volumes:
      - pgvector-data:/var/lib/postgresql/data
    networks:
      - ocr

  app:
    build:
      context: ./core
      dockerfile: Dockerfile
    container_name: core-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/coredb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres

      AWS_S3-ENDPOINT: http://minio:9000/
      OLLAMA_MODEL: llama3.2-vision:11b
      OLLAMA_BASE_URL: http://127.0.0.1:11434
    depends_on:
      postgres:
        condition: service_healthy

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
      args:
        VITE_API_BACKEND: "http://localhost:8080/api/v0"
    container_name: web-frontend
    restart: unless-stopped
    ports:
      - "5173:80"
    environment:
      - NODE_ENV=production
    depends_on:
      - app
    networks:
      - ocr

networks:
  ocr:
    driver: bridge

volumes:
  postgres_data:
  pgvector-data: